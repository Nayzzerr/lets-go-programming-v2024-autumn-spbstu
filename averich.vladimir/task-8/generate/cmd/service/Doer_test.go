// Code generated by mockery v2.50.0. DO NOT EDIT.

package mock_test

import mock "github.com/stretchr/testify/mock"

// Doer is an autogenerated mock type for the Doer type
type Doer struct {
	mock.Mock
}

// Add provides a mock function with given fields: a, b
func (_m *Doer) Add(a int, b int) int {
	ret := _m.Called(a, b)

	if len(ret) == 0 {
		panic("no return value specified for Add")
	}

	var r0 int
	if rf, ok := ret.Get(0).(func(int, int) int); ok {
		r0 = rf(a, b)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// NewDoer creates a new instance of Doer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDoer(t interface {
	mock.TestingT
	Cleanup(func())
}) *Doer {
	mock := &Doer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
